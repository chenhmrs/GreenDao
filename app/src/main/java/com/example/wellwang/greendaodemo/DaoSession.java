package com.example.wellwang.greendaodemo;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.wellwang.greendaodemo.Boss;
import com.example.wellwang.greendaodemo.Member;
import com.example.wellwang.greendaodemo.simple.Temp;
import com.example.wellwang.greendaodemo.User;
import com.example.wellwang.greendaodemo.Wife;

import com.example.wellwang.greendaodemo.BossDao;
import com.example.wellwang.greendaodemo.MemberDao;
import com.example.wellwang.greendaodemo.TempDao;
import com.example.wellwang.greendaodemo.UserDao;
import com.example.wellwang.greendaodemo.WifeDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bossDaoConfig;
    private final DaoConfig memberDaoConfig;
    private final DaoConfig tempDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig wifeDaoConfig;

    private final BossDao bossDao;
    private final MemberDao memberDao;
    private final TempDao tempDao;
    private final UserDao userDao;
    private final WifeDao wifeDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bossDaoConfig = daoConfigMap.get(BossDao.class).clone();
        bossDaoConfig.initIdentityScope(type);

        memberDaoConfig = daoConfigMap.get(MemberDao.class).clone();
        memberDaoConfig.initIdentityScope(type);

        tempDaoConfig = daoConfigMap.get(TempDao.class).clone();
        tempDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        wifeDaoConfig = daoConfigMap.get(WifeDao.class).clone();
        wifeDaoConfig.initIdentityScope(type);

        bossDao = new BossDao(bossDaoConfig, this);
        memberDao = new MemberDao(memberDaoConfig, this);
        tempDao = new TempDao(tempDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        wifeDao = new WifeDao(wifeDaoConfig, this);

        registerDao(Boss.class, bossDao);
        registerDao(Member.class, memberDao);
        registerDao(Temp.class, tempDao);
        registerDao(User.class, userDao);
        registerDao(Wife.class, wifeDao);
    }
    
    public void clear() {
        bossDaoConfig.clearIdentityScope();
        memberDaoConfig.clearIdentityScope();
        tempDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        wifeDaoConfig.clearIdentityScope();
    }

    public BossDao getBossDao() {
        return bossDao;
    }

    public MemberDao getMemberDao() {
        return memberDao;
    }

    public TempDao getTempDao() {
        return tempDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public WifeDao getWifeDao() {
        return wifeDao;
    }

}
